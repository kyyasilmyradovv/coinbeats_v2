paths:
  /api/v2/user/auth/login:
    post:
      tags: [Authentication]
      description: Login as user
      statuses: [400, 404]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginFieldsOfUsers'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponseOfUser'
  /api/v2/user/auth/google-signin:
    post:
      tags: [Authentication]
      description: Login as user
      statuses: [400, 404]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: 'kyyas.ilmyradov@gmail.com'
                name:
                  type: string
                  example: 'kyyas'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponseOfUser'
  /api/v2/user/auth/send-me-code:
    post:
      tags: [Authentication]
      description: Send me email verification code
      statuses: [400, 409]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: 'kyyas.ilmyradov@gmail.com'
      responses:
        '200':
          description: 'Code sent'
  /api/v2/user/auth/verify:
    post:
      tags: [Authentication]
      description: Verify new user email
      statuses: [400, 404, 409]
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: 'kyyas.ilmyradov@gmail.com'
                code:
                  type: string
                  example: '123456'
      responses:
        '200':
          description: 'Verification done successfully'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponseOfUser'
  /api/v2/user/auth/refresh-token:
    post:
      tags: [Authentication]
      description: Refresh user token
      statuses: []
      requestBody:
        content:
          application/json:
            schema:
              properties:
                refreshToken:
                  type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponseOfUser'
        '409':
          description: 'Refresh token expired or invalid'
  /api/v2/user/auth/profile:
    get:
      tags: [Authentication]
      description: Get my profile
      statuses: [401]
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileOfUser'
    put:
      tags: [Authentication]
      description: Update my profile
      statuses: [400, 401, 404]
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFieldsOfUsersProfile'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileOfUser'
