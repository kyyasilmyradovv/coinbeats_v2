services:
  postgres-production:
    image: postgres:latest
    container_name: coinbeats-production-database
    environment:
      POSTGRES_USER: coinbeats_prod_user
      POSTGRES_PASSWORD: Onamission#007
      POSTGRES_DB: coinbeats_prod_db
    volumes:
      - coinbeats_prod_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    restart: always

  postgres-development:
    image: postgres:latest
    container_name: coinbeats-development-database
    environment:
      POSTGRES_USER: coinbeats_dev_user
      POSTGRES_PASSWORD: Onamission#007
      POSTGRES_DB: coinbeats_dev_db
    volumes:
      - coinbeats_dev_data:/var/lib/postgresql/data
    ports:
      - "5434:5432"
    restart: always

  frontend-blue:
    build:
      context: ./client
      dockerfile: Dockerfile
    ports:
      - "8082:3000"
    networks:
      - app-network
    depends_on:
      - backend-blue
    restart: always

  backend-blue:
    build:
      context: ./server
      dockerfile: Dockerfile
    ports:
      - "5000:4000"
      - "9229:9229" # Port for Node.js debugging
    env_file:
      - .env.production
    volumes:
      - uploads:/app/public/uploads
    restart: always
    networks:
      - app-network
    command: node --inspect=0.0.0.0:9229 /app/server.js # Replace "index.js" with your entry point file

  frontend-green:
    build:
      context: ./client
      dockerfile: Dockerfile
    ports:
      - "8084:3000"
    networks:
      - app-network
    depends_on:
      - backend-green
    restart: always

  backend-green:
    build:
      context: ./server
      dockerfile: Dockerfile
    ports:
      - "5001:4000"
      - "9230:9229" # Port for Node.js debugging
    env_file:
      - .env.production
    volumes:
      - uploads:/app/public/uploads
    restart: always
    networks:
      - app-network
    command: node --inspect=0.0.0.0:9229 /app/server.js # Replace "index.js" with your entry point file

networks:
  app-network:
    external: true

volumes:
  coinbeats_prod_data:
  coinbeats_dev_data:
  uploads:
